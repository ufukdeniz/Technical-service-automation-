<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W4xbS3u7Uu0xtO1ZlZjr07xX3rdbqv7PyQ2uUqVyb55y1XvrZyJemiNuyFGyHZcOjG/lz+km3tcpa9fo
        uR1MNOjSHntXl9Jkn3R2Q6Ba1gAAAwq01JOMlfGSaa3p7SJjeNpZVtNZiYdH5NajnTtVgm78PEpq/nhJ
        O7t1nJtXo2mHpcd+nWLe9wcjU5U4zoS22etOlr54p3xfYzf01t6be5xtfTo5d/e6BsNEA11+TLqZqa/+
        myeUtvQx/wCTTzh0cy8n4tbTkr40Vpdcnyfj6DxVK9r3D6GXIANsEWVYWb4IvrCqXtWhGXKipedFS9pl
        NYnmx3YKlGKuilFbopJdxhMbcmcS+dZ6WHCr6aV0ay0v7tkvc/Sc7PXazYpO8ORHYuo9xpO4pv7o/Z4X
        V9/fzlkbLWAAAAAAAAAAAAAAAAAAAAAAI9t5K41KS7asUVZ+7ls6SP8A9qrX8qiuyZFczdL8xHLeglXL
        jsQ8vPMJQAAAACd8nMP3ja+MKLf4GjmajvJd/RTvhj5oeVaWhbrZFbHhT9L01/6l+k8WpxKPZnzYm45Y
        BjON6a3poqz4/SY7U98bLcGT0eSt/dMLhmHZdGzSnzzqNv0avieKjHNd4nnD3UXi0RMcpWIMwDdTLaq7
        JMC+qqzbcW7K92qaK7LIVfPizxlZ9J8qFSOi+t3Pu9hr2wTmtFI5zLO2WMVJvblEKQezrWK1iseDwtrT
        a02nxDJiAAAAAAAAAAAAAAAAAAAAAAR7byY/fUfzoFOfu5bWj76q2fKr/LYddL8yJzId+eSts7Ly4EAA
        AAA6Pyb/AMytX3VD/FnN1PeS7+h7mPm0ZxfzC1fdUP8AKsW6TxavE/y/P7IpuuUAAPoWa8f9NDin7WeT
        1fbnyeb2eijbT4/JONFvgG6mW1V2SaZsVVWb79RcqaahVZZVWc9ZXULt9SPvNjh0f+RHzafFJ200/JRT
        0jyYAAAAAAAAAAAAAAAAAAAAAAAj23kx++o/nQKc/dy2tH31Vq+VN/u6HnU/zkcyHfnkrrOy8uBAAAAA
        Oh8nT/eVq+7oexnN1PeS7+h7mPm0ZwP/AF9p+5oe2qW6TxavE/y/P7IxuuUAAPoGac77PDgru88pqo21
        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
</value>
  </data>
</root>